server:
  port: 8087
  servlet:
    context-path: '/ead-authuser/'

spring:
  application:
    name: ead-authuser-service # Nome da aplicação para o Eureka
  datasource:
    url: jdbc:postgresql://localhost:5432/ead-authuser
    username: postgres
    password: 1234567
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob.non-contextual-creation: true
    properties:
      hibernate:
        show_sql: true
  rabbitmq:
    addresses: amqps://oijgbbli:iL-DudOhnSXPLx_3oEtqZcAC4UkZgQjm@leopard.lmq.cloudamqp.com/oijgbbli

logging:
  level:
    com.ead: TRACE
    root: INFO
    org.springframework.web: DEBUG
    org.hibernate: INFO

ead:
  api:
    url:
      course: 'http://ead-course-service/ead-course' # Id/nome eureka de course (ead-course-service).
  broker:
    exchange:
      userEvent: ead.userevent

eureka:
  client:
    serviceUrl:
      defaultZone: 'http://localhost:8761/eureka'  # Endereço onde o eureka está disponível.
  instance:
    hostname: localhost

resilience4j:
  retry: # Seção de configuração para o mecanismo de retry do Resilience4j
    instances: # Define múltiplas instâncias nomeadas de configuração de retry
      retryInstance: # Nome da instância de retry
        maxRetryAttempts: 3 # Número máximo de tentativas
        waitDuration: 5s    # Intervalo de espera entre cada tentativa
